<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 클래스 파일에 있는 어노테이션을 스캔하고 빈을 생성함(스캔이  되는 순간 빈이됨) -->
	<!-- @Component -> 있으면 bean 생성 ->@Autowried이 붙어있으면 생성되어 있는 빈이 자동으로 주입됨 
		1.Type먼저 살펴봄
		2.Name 후에 살펴봄
	-->
	<context:component-scan base-package="com.test01.anno"></context:component-scan>
	<!-- 
		**Spring Framework에서 annotation 사용하기 위한 설정
		<context:component-scan base-package=""/>
		1.@Component, @Controller,@Service,@Repository등의 어노테이션을 자동처리
		2.CommonAnnotationBeanPostProcessor 클래스를 설정파일에 bean객체로 등력하여 annotation적용
		<bean class="org.springfamework.beans. .... commonAnnotationBeanPostProcessor>
		3.<context:annotation-config>
		4.mvc:annotation-driven
			
		**4개의 stereotype의 annotation1
		@Component:클래스에 선언하며 해당 클래스를 자동으로 bean등록(첫글자는 무조건 소문자,클래스이름과 동일하게 사용해야함),
		@Repository:DAO에 사용,
		@Service:BIZ(비즈니스클래스)에 사용,
		@Controller:CONTROLLER로 인식
		
		@AutoWired:Spring에서 의존관계를 자동으로 설정
		byType으로 의존관계를 자동 설정할 경우 해당타입에 빈이 없거나 같은 타입이 두 개이상 일때 예외가 발생함
		=>이경우@Qualifier("test")이용하여, 특정빈을 사용할때 좀더 명확히 하기위해 사용.	//이름이 test라는 빈
		=>EX)@Autowired
		=>   @Qualifier("test") ; byType으로 먼저 찾고 ==>byName('test')으로 !!
		
		@Qualifier:@Autowried 어노테이션이 타입기반이기에 같은 타입2개이상 존재할 경우 특정빈을 사용하도록 선언
		@Required:필수 프로퍼티임을 명시하는것 setter에 붙이면 됨.
		@Repository:DAO에사용,Exception을 DataAccedssException으로 변환 시켜주는 친구
		@Service:해당 어노테이션을 적용한 클래스는 비즈니스 로직(biz)으로 등록됨
		@Resource:어플리케이션에서 필요로 하는 자원을 자동으로 연결할 때 사용,
				  name 속성에 자동으로 연결 될 빈 객체의 이름을 입력.(javax.annotation.Resource소속)
				  name으로 먼저 찾고 못찾으면 type으로 찾음
				  EX)Resource(name="testDao")
		
	 -->
</beans>
